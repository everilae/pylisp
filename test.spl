(define factorial
  (lambda (x)
    (let
      (fact (lambda (x result)
	      (if
		(= x 0)
		result
		(fact (- x 1) (* x result)))))
      (fact x 1))))

(print (factorial 1))
(print (factorial 10))
(print (factorial 100))

(define apply
  (lambda (fun args)
    (eval (cons fun args))))

(print (apply + '(1 2 3 4 5)))
